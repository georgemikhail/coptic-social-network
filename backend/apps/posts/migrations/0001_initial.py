# Generated by Django 4.2.7 on 2025-06-13 08:25

import apps.posts.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parishes', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Feed',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=True)),
                ('is_official', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('allowed_post_types', models.JSONField(default=list, help_text='List of allowed post types. Empty means all types allowed.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_feeds', to=settings.AUTH_USER_MODEL)),
                ('parish', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feeds', to='parishes.parish')),
            ],
            options={
                'db_table': 'posts_feed',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField(blank=True)),
                ('post_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('document', 'Document'), ('link', 'Link'), ('event', 'Event'), ('announcement', 'Announcement')], default='text', max_length=20)),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('parish_only', 'Parish Only'), ('friends_only', 'Friends Only'), ('private', 'Private')], default='parish_only', max_length=20)),
                ('is_announcement', models.BooleanField(default=False)),
                ('is_pinned', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('requires_approval', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('comments_count', models.PositiveIntegerField(default=0)),
                ('shares_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_posts', to=settings.AUTH_USER_MODEL)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
                ('target_parish', models.ForeignKey(blank=True, help_text="Parish this post is targeted to. If null, uses author's parish.", null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='parishes.parish')),
            ],
            options={
                'db_table': 'posts_post',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
                ('is_official', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'posts_tag',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PostMedia',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to=apps.posts.models.post_media_upload_path)),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('content_type', models.CharField(max_length=100)),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('document', 'Document')], max_length=20)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('alt_text', models.CharField(blank=True, help_text='For accessibility', max_length=500)),
                ('duration', models.DurationField(blank=True, help_text='For audio/video', null=True)),
                ('width', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='posts.post')),
            ],
            options={
                'db_table': 'posts_media',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeedPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_pinned', models.BooleanField(default=False)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feed_additions', to=settings.AUTH_USER_MODEL)),
                ('feed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feed_posts', to='posts.feed')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_feeds', to='posts.post')),
            ],
            options={
                'db_table': 'posts_feed_post',
                'ordering': ['-is_pinned', 'order', '-added_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('is_approved', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='posts.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='posts.post')),
            ],
            options={
                'db_table': 'posts_comment',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField(blank=True)),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('parish_only', 'Parish Only'), ('friends_only', 'Friends Only'), ('private', 'Private')], default='parish_only', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='posts.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shares', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'posts_share',
                'ordering': ['-created_at'],
                'unique_together': {('post', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField()),
                ('reaction_type', models.CharField(choices=[('like', '👍 Like'), ('love', '❤️ Love'), ('pray', '🙏 Pray'), ('amen', '✝️ Amen'), ('support', '🤝 Support'), ('celebrate', '🎉 Celebrate')], default='like', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'posts_reaction',
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='posts_react_content_48b564_idx'), models.Index(fields=['user', '-created_at'], name='posts_react_user_id_cd85fe_idx')],
                'unique_together': {('user', 'content_type', 'object_id')},
            },
        ),
        migrations.CreateModel(
            name='PostTagging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_tags', to='posts.post')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_posts', to='posts.posttag')),
                ('tagged_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_taggings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'posts_tagging',
                'unique_together': {('post', 'tag')},
            },
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['author', '-created_at'], name='posts_post_author__f8ea20_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['target_parish', '-created_at'], name='posts_post_target__684654_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['visibility', '-created_at'], name='posts_post_visibil_5a979a_idx'),
        ),
        migrations.AddIndex(
            model_name='post',
            index=models.Index(fields=['is_approved', '-created_at'], name='posts_post_is_appr_deda3c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='feedpost',
            unique_together={('feed', 'post')},
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['post', '-created_at'], name='posts_comme_post_id_7929fe_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['author', '-created_at'], name='posts_comme_author__85ae26_idx'),
        ),
    ]
