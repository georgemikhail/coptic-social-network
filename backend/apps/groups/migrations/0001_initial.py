# Generated by Django 4.2.7 on 2025-06-14 03:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parishes', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(verbose_name='description')),
                ('group_type', models.CharField(choices=[('ministry', 'Ministry'), ('committee', 'Committee'), ('interest', 'Interest Group'), ('age_based', 'Age-based Group'), ('study', 'Study Group'), ('service', 'Service Group'), ('prayer', 'Prayer Group'), ('social', 'Social Group')], default='interest', max_length=20, verbose_name='group type')),
                ('privacy', models.CharField(choices=[('public', 'Public'), ('parish_only', 'Parish Members Only'), ('private', 'Private'), ('invite_only', 'Invite Only')], default='parish_only', max_length=20, verbose_name='privacy')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='group_covers/', verbose_name='cover image')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='group_icons/', verbose_name='icon')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('allow_member_posts', models.BooleanField(default=True, verbose_name='allow member posts')),
                ('require_approval', models.BooleanField(default=False, verbose_name='require approval to join')),
                ('member_count', models.PositiveIntegerField(default=0, verbose_name='member count')),
                ('max_members', models.PositiveIntegerField(blank=True, help_text='Leave empty for unlimited members', null=True, verbose_name='maximum members')),
                ('post_count', models.PositiveIntegerField(default=0, verbose_name='post count')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_groups', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('moderator', 'Moderator'), ('member', 'Member')], default='member', max_length=20, verbose_name='role')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('notifications_enabled', models.BooleanField(default=True, verbose_name='notifications enabled')),
                ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name='joined at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='groups.group', verbose_name='group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_memberships', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Group Membership',
                'verbose_name_plural': 'Group Memberships',
                'ordering': ['-joined_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupJoinRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20, verbose_name='status')),
                ('message', models.TextField(blank=True, help_text='Optional message from the user', verbose_name='message')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='processed at')),
                ('admin_notes', models.TextField(blank=True, verbose_name='admin notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='join_requests', to='groups.group', verbose_name='group')),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_join_requests', to=settings.AUTH_USER_MODEL, verbose_name='processed by')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_join_requests', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Group Join Request',
                'verbose_name_plural': 'Group Join Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupInvitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField(blank=True, help_text='Optional message from the inviter', verbose_name='message')),
                ('is_accepted', models.BooleanField(default=False, verbose_name='is accepted')),
                ('is_declined', models.BooleanField(default=False, verbose_name='is declined')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('responded_at', models.DateTimeField(blank=True, null=True, verbose_name='responded at')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='expires at')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='groups.group', verbose_name='group')),
                ('invited_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_group_invitations', to=settings.AUTH_USER_MODEL, verbose_name='invited by')),
                ('invited_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_invitations', to=settings.AUTH_USER_MODEL, verbose_name='invited user')),
            ],
            options={
                'verbose_name': 'Group Invitation',
                'verbose_name_plural': 'Group Invitations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GroupEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('location', models.CharField(blank=True, max_length=200, verbose_name='location')),
                ('start_datetime', models.DateTimeField(verbose_name='start date and time')),
                ('end_datetime', models.DateTimeField(verbose_name='end date and time')),
                ('is_all_day', models.BooleanField(default=False, verbose_name='is all day')),
                ('max_attendees', models.PositiveIntegerField(blank=True, null=True, verbose_name='maximum attendees')),
                ('require_rsvp', models.BooleanField(default=False, verbose_name='require RSVP')),
                ('is_public', models.BooleanField(default=False, verbose_name='is public')),
                ('attendee_count', models.PositiveIntegerField(default=0, verbose_name='attendee count')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_group_events', to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='groups.group', verbose_name='group')),
            ],
            options={
                'verbose_name': 'Group Event',
                'verbose_name_plural': 'Group Events',
                'ordering': ['start_datetime'],
            },
        ),
        migrations.AddField(
            model_name='group',
            name='members',
            field=models.ManyToManyField(related_name='community_groups', through='groups.GroupMembership', to=settings.AUTH_USER_MODEL, verbose_name='members'),
        ),
        migrations.AddField(
            model_name='group',
            name='parish',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='parishes.parish', verbose_name='parish'),
        ),
        migrations.CreateModel(
            name='GroupPost',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='title')),
                ('content', models.TextField(verbose_name='content')),
                ('is_announcement', models.BooleanField(default=False, verbose_name='is announcement')),
                ('is_pinned', models.BooleanField(default=False, verbose_name='is pinned')),
                ('is_approved', models.BooleanField(default=True, verbose_name='is approved')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='is deleted')),
                ('likes_count', models.PositiveIntegerField(default=0, verbose_name='likes count')),
                ('comments_count', models.PositiveIntegerField(default=0, verbose_name='comments count')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('published_at', models.DateTimeField(auto_now_add=True, verbose_name='published at')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='group_posts', to=settings.AUTH_USER_MODEL, verbose_name='author')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='groups.group', verbose_name='group')),
            ],
            options={
                'verbose_name': 'Group Post',
                'verbose_name_plural': 'Group Posts',
                'ordering': ['-is_pinned', '-published_at'],
                'indexes': [models.Index(fields=['group', '-published_at'], name='groups_grou_group_i_2ff7a8_idx'), models.Index(fields=['author', '-created_at'], name='groups_grou_author__3bd12a_idx'), models.Index(fields=['is_announcement', '-published_at'], name='groups_grou_is_anno_e5e0e2_idx'), models.Index(fields=['is_pinned', '-published_at'], name='groups_grou_is_pinn_a387ee_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='groupmembership',
            index=models.Index(fields=['group', 'is_active'], name='groups_grou_group_i_f7e3a8_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmembership',
            index=models.Index(fields=['user', 'is_active'], name='groups_grou_user_id_bd45cf_idx'),
        ),
        migrations.AddIndex(
            model_name='groupmembership',
            index=models.Index(fields=['role', 'is_active'], name='groups_grou_role_c5027a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='groupmembership',
            unique_together={('group', 'user')},
        ),
        migrations.AddIndex(
            model_name='groupjoinrequest',
            index=models.Index(fields=['group', 'status'], name='groups_grou_group_i_0e9dd5_idx'),
        ),
        migrations.AddIndex(
            model_name='groupjoinrequest',
            index=models.Index(fields=['user', 'status'], name='groups_grou_user_id_08ed7c_idx'),
        ),
        migrations.AddIndex(
            model_name='groupjoinrequest',
            index=models.Index(fields=['status', '-created_at'], name='groups_grou_status_72cbae_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='groupjoinrequest',
            unique_together={('group', 'user')},
        ),
        migrations.AddIndex(
            model_name='groupinvitation',
            index=models.Index(fields=['group', 'is_accepted', 'is_declined'], name='groups_grou_group_i_f82704_idx'),
        ),
        migrations.AddIndex(
            model_name='groupinvitation',
            index=models.Index(fields=['invited_user', 'is_accepted', 'is_declined'], name='groups_grou_invited_3cf01e_idx'),
        ),
        migrations.AddIndex(
            model_name='groupinvitation',
            index=models.Index(fields=['-created_at'], name='groups_grou_created_cf6add_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='groupinvitation',
            unique_together={('group', 'invited_user')},
        ),
        migrations.AddIndex(
            model_name='groupevent',
            index=models.Index(fields=['group', 'start_datetime'], name='groups_grou_group_i_cb82fa_idx'),
        ),
        migrations.AddIndex(
            model_name='groupevent',
            index=models.Index(fields=['start_datetime', 'end_datetime'], name='groups_grou_start_d_dc3002_idx'),
        ),
        migrations.AddIndex(
            model_name='groupevent',
            index=models.Index(fields=['is_public', 'start_datetime'], name='groups_grou_is_publ_7d364b_idx'),
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['parish', '-created_at'], name='groups_grou_parish__ddee26_idx'),
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['group_type', 'is_active'], name='groups_grou_group_t_4c713a_idx'),
        ),
        migrations.AddIndex(
            model_name='group',
            index=models.Index(fields=['privacy', 'is_active'], name='groups_grou_privacy_624746_idx'),
        ),
    ]
